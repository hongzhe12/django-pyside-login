"""
Django settings for user_management project.

Generated by 'django-admin startproject' using Django 4.2.17.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-o9ykalh2jwm=_a$tb!(m@-%f%2htu$j*^ogl9@!m=rmj23hdi1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'simpleui',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'accounts.apps.AccountsConfig',
    'corsheaders',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'user_management.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'user_management.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases


if DEBUG:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }

else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': os.environ['POSTGRES_DB'],
            'HOST': 'postgres',
            'PORT': 5432,
            'USER': os.environ['POSTGRES_USER'],
            'PASSWORD': os.environ['POSTGRES_PASSWORD']
        }
    }

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'  # 设置语言为简体中文

TIME_ZONE = 'Asia/Shanghai'  # 设置时区为中国上海

USE_I18N = True  # 启用国际化

USE_L10N = True  # 启用本地化
USE_TZ = True  # 启用时区支持

DATE_FORMAT = 'Y年m月d日'  # 设置日期格式为：2024年12月26日

TIME_FORMAT = 'H:i:s'  # 设置时间格式为：13:45:30

DATETIME_FORMAT = 'Y年m月d日 H:i:s'  # 设置日期时间格式为：2024年12月26日 13:45:30


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/



# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ALLOW_ALL_ORIGINS = True  # 允许所有源进行跨域请求


import mimetypes
mimetypes.add_type("image/svg+xml", ".svg", True)
mimetypes.add_type("image/svg+xml", ".svgz", True)


# 媒体文件存储的根目录，使用项目根目录下的 media 文件夹
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# 媒体文件的 URL 前缀
MEDIA_URL = '/media/'




# 隐藏右侧 SimpleUI 广告链接和使用分析
SIMPLEUI_HOME_INFO = False
SIMPLEUI_ANALYSIS = False

# 设置首页信息
# SIMPLEUI_HOME_PAGE = 'https://yourwebsite.com'
SIMPLEUI_HOME_TITLE = '简历助手-用户管理系统'


PLEUI_LOGO = 'https://221793.xyz/static/logo/logo.png'

# 设置主题
SIMPLEUI_DEFAULT_THEME = 'element.css' # Element-UI


'''
静态文件处理：在调试模式下，Django 会使用STATICFILES_DIRS来查找静态文件，多个静态文件目录可能会导致查找效率降低。在生产环境中，通常会将静态文件收集到STATIC_ROOT指定的目录中，并使用专门的静态文件服务器来提供服务，以提高性能。
媒体文件存储：示例中配置了MEDIA_ROOT和MEDIA_URL用于媒体文件的存储和访问，在开发环境中要确保媒体文件的存储和访问正常，同时考虑生产环境中的存储方案，如使用对象存储服务等。
'''

STATIC_URL = 'static/'

# （DEBUG=True时使用）
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR,'static'),
# ]

# 设置静态文件收集的目标路径（DEBUG=False时使用）
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
print("STATIC_ROOT:", STATIC_ROOT)

CSRF_TRUSTED_ORIGINS = [
    'https://221793.xyz'
]